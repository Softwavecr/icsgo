// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package icsgo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameEnd_Reason int32

const (
	GameEnd_RESIGN      GameEnd_Reason = 0
	GameEnd_DISCONNECT  GameEnd_Reason = 1
	GameEnd_CHECKMATE   GameEnd_Reason = 2
	GameEnd_TIMEFORFEIT GameEnd_Reason = 3
	GameEnd_DRAW        GameEnd_Reason = 4
	GameEnd_ADJOURN     GameEnd_Reason = 5
	GameEnd_ABORT       GameEnd_Reason = 6
)

var GameEnd_Reason_name = map[int32]string{
	0: "RESIGN",
	1: "DISCONNECT",
	2: "CHECKMATE",
	3: "TIMEFORFEIT",
	4: "DRAW",
	5: "ADJOURN",
	6: "ABORT",
}

var GameEnd_Reason_value = map[string]int32{
	"RESIGN":      0,
	"DISCONNECT":  1,
	"CHECKMATE":   2,
	"TIMEFORFEIT": 3,
	"DRAW":        4,
	"ADJOURN":     5,
	"ABORT":       6,
}

func (x GameEnd_Reason) String() string {
	return proto.EnumName(GameEnd_Reason_name, int32(x))
}

func (GameEnd_Reason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3, 0}
}

// channel tell
type ChannelTell struct {
	// channel name
	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// handle of the user who made the tell
	Handle string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	// message / body of the tell
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelTell) Reset()         { *m = ChannelTell{} }
func (m *ChannelTell) String() string { return proto.CompactTextString(m) }
func (*ChannelTell) ProtoMessage()    {}
func (*ChannelTell) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

func (m *ChannelTell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTell.Unmarshal(m, b)
}
func (m *ChannelTell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTell.Marshal(b, m, deterministic)
}
func (m *ChannelTell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTell.Merge(m, src)
}
func (m *ChannelTell) XXX_Size() int {
	return xxx_messageInfo_ChannelTell.Size(m)
}
func (m *ChannelTell) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTell.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTell proto.InternalMessageInfo

func (m *ChannelTell) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ChannelTell) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

func (m *ChannelTell) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// private tell
type PrivateTell struct {
	// handle of the user who made the tell
	Handle string `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	// message / body of the tell
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateTell) Reset()         { *m = PrivateTell{} }
func (m *PrivateTell) String() string { return proto.CompactTextString(m) }
func (*PrivateTell) ProtoMessage()    {}
func (*PrivateTell) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

func (m *PrivateTell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateTell.Unmarshal(m, b)
}
func (m *PrivateTell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateTell.Marshal(b, m, deterministic)
}
func (m *PrivateTell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateTell.Merge(m, src)
}
func (m *PrivateTell) XXX_Size() int {
	return xxx_messageInfo_PrivateTell.Size(m)
}
func (m *PrivateTell) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateTell.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateTell proto.InternalMessageInfo

func (m *PrivateTell) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

func (m *PrivateTell) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// a game start message
type GameStart struct {
	// id of the game that was started
	GameId uint32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// handle of player one
	PlayerOne string `protobuf:"bytes,2,opt,name=player_one,json=playerOne,proto3" json:"player_one,omitempty"`
	// handle of player two
	PlayerTwo            string   `protobuf:"bytes,3,opt,name=player_two,json=playerTwo,proto3" json:"player_two,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStart) Reset()         { *m = GameStart{} }
func (m *GameStart) String() string { return proto.CompactTextString(m) }
func (*GameStart) ProtoMessage()    {}
func (*GameStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{2}
}

func (m *GameStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStart.Unmarshal(m, b)
}
func (m *GameStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStart.Marshal(b, m, deterministic)
}
func (m *GameStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStart.Merge(m, src)
}
func (m *GameStart) XXX_Size() int {
	return xxx_messageInfo_GameStart.Size(m)
}
func (m *GameStart) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStart.DiscardUnknown(m)
}

var xxx_messageInfo_GameStart proto.InternalMessageInfo

func (m *GameStart) GetGameId() uint32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GameStart) GetPlayerOne() string {
	if m != nil {
		return m.PlayerOne
	}
	return ""
}

func (m *GameStart) GetPlayerTwo() string {
	if m != nil {
		return m.PlayerTwo
	}
	return ""
}

// a game end message
type GameEnd struct {
	// id of the game that was ended
	GameId uint32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// handle of the user who won the game, if it wasn't a draw
	Winner string `protobuf:"bytes,2,opt,name=winner,proto3" json:"winner,omitempty"`
	// handle of the user who lost the game, if it wasn't a draw
	Loser  string         `protobuf:"bytes,3,opt,name=loser,proto3" json:"loser,omitempty"`
	Reason GameEnd_Reason `protobuf:"varint,4,opt,name=reason,proto3,enum=icsgo.GameEnd_Reason" json:"reason,omitempty"`
	// message associated with the game result
	Message              string   `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameEnd) Reset()         { *m = GameEnd{} }
func (m *GameEnd) String() string { return proto.CompactTextString(m) }
func (*GameEnd) ProtoMessage()    {}
func (*GameEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3}
}

func (m *GameEnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameEnd.Unmarshal(m, b)
}
func (m *GameEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameEnd.Marshal(b, m, deterministic)
}
func (m *GameEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameEnd.Merge(m, src)
}
func (m *GameEnd) XXX_Size() int {
	return xxx_messageInfo_GameEnd.Size(m)
}
func (m *GameEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_GameEnd.DiscardUnknown(m)
}

var xxx_messageInfo_GameEnd proto.InternalMessageInfo

func (m *GameEnd) GetGameId() uint32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GameEnd) GetWinner() string {
	if m != nil {
		return m.Winner
	}
	return ""
}

func (m *GameEnd) GetLoser() string {
	if m != nil {
		return m.Loser
	}
	return ""
}

func (m *GameEnd) GetReason() GameEnd_Reason {
	if m != nil {
		return m.Reason
	}
	return GameEnd_RESIGN
}

func (m *GameEnd) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// a game move message
type GameMove struct {
	Fen                  string   `protobuf:"bytes,1,opt,name=fen,proto3" json:"fen,omitempty"`
	Turn                 string   `protobuf:"bytes,2,opt,name=turn,proto3" json:"turn,omitempty"`
	GameId               uint32   `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	WhiteName            string   `protobuf:"bytes,4,opt,name=white_name,json=whiteName,proto3" json:"white_name,omitempty"`
	BlackName            string   `protobuf:"bytes,5,opt,name=black_name,json=blackName,proto3" json:"black_name,omitempty"`
	Role                 uint32   `protobuf:"varint,6,opt,name=role,proto3" json:"role,omitempty"`
	Time                 uint32   `protobuf:"varint,7,opt,name=time,proto3" json:"time,omitempty"`
	Inc                  uint32   `protobuf:"varint,8,opt,name=inc,proto3" json:"inc,omitempty"`
	WhiteTime            uint32   `protobuf:"varint,9,opt,name=white_time,json=whiteTime,proto3" json:"white_time,omitempty"`
	BlackTime            uint32   `protobuf:"varint,10,opt,name=black_time,json=blackTime,proto3" json:"black_time,omitempty"`
	Move                 string   `protobuf:"bytes,11,opt,name=move,proto3" json:"move,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameMove) Reset()         { *m = GameMove{} }
func (m *GameMove) String() string { return proto.CompactTextString(m) }
func (*GameMove) ProtoMessage()    {}
func (*GameMove) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4}
}

func (m *GameMove) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameMove.Unmarshal(m, b)
}
func (m *GameMove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameMove.Marshal(b, m, deterministic)
}
func (m *GameMove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameMove.Merge(m, src)
}
func (m *GameMove) XXX_Size() int {
	return xxx_messageInfo_GameMove.Size(m)
}
func (m *GameMove) XXX_DiscardUnknown() {
	xxx_messageInfo_GameMove.DiscardUnknown(m)
}

var xxx_messageInfo_GameMove proto.InternalMessageInfo

func (m *GameMove) GetFen() string {
	if m != nil {
		return m.Fen
	}
	return ""
}

func (m *GameMove) GetTurn() string {
	if m != nil {
		return m.Turn
	}
	return ""
}

func (m *GameMove) GetGameId() uint32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GameMove) GetWhiteName() string {
	if m != nil {
		return m.WhiteName
	}
	return ""
}

func (m *GameMove) GetBlackName() string {
	if m != nil {
		return m.BlackName
	}
	return ""
}

func (m *GameMove) GetRole() uint32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *GameMove) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *GameMove) GetInc() uint32 {
	if m != nil {
		return m.Inc
	}
	return 0
}

func (m *GameMove) GetWhiteTime() uint32 {
	if m != nil {
		return m.WhiteTime
	}
	return 0
}

func (m *GameMove) GetBlackTime() uint32 {
	if m != nil {
		return m.BlackTime
	}
	return 0
}

func (m *GameMove) GetMove() string {
	if m != nil {
		return m.Move
	}
	return ""
}

func init() {
	proto.RegisterEnum("icsgo.GameEnd_Reason", GameEnd_Reason_name, GameEnd_Reason_value)
	proto.RegisterType((*ChannelTell)(nil), "icsgo.ChannelTell")
	proto.RegisterType((*PrivateTell)(nil), "icsgo.PrivateTell")
	proto.RegisterType((*GameStart)(nil), "icsgo.GameStart")
	proto.RegisterType((*GameEnd)(nil), "icsgo.GameEnd")
	proto.RegisterType((*GameMove)(nil), "icsgo.GameMove")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x14, 0x24, 0x89, 0x63, 0xc7, 0xcf, 0x6a, 0xb1, 0x9e, 0xa0, 0xf8, 0x82, 0x54, 0xe5, 0xd4, 0x0b,
	0x39, 0xc0, 0x07, 0xa0, 0xe0, 0xb8, 0xc5, 0xa0, 0xd8, 0x68, 0x63, 0x84, 0x38, 0x45, 0x9b, 0xe4,
	0x35, 0xb1, 0xb0, 0x77, 0x23, 0xdb, 0x24, 0xea, 0x91, 0x6f, 0xe0, 0x87, 0x91, 0xdf, 0x3a, 0x6a,
	0x8a, 0xd4, 0xdb, 0x9b, 0x99, 0xdd, 0x99, 0x9d, 0x5d, 0x2d, 0x78, 0xcd, 0xc3, 0x9e, 0xea, 0xc9,
	0xbe, 0xd2, 0x8d, 0xc6, 0x61, 0xbe, 0xae, 0xb7, 0x7a, 0xfc, 0x13, 0xbc, 0x70, 0x27, 0x95, 0xa2,
	0x22, 0xa3, 0xa2, 0xc0, 0x00, 0x9c, 0xb5, 0x81, 0x41, 0xef, 0xba, 0x77, 0xe3, 0x8a, 0x13, 0xc4,
	0x2b, 0xb0, 0x77, 0x52, 0x6d, 0x0a, 0x0a, 0xfa, 0x2c, 0x74, 0xa8, 0xdd, 0x51, 0x52, 0x5d, 0xcb,
	0x2d, 0x05, 0x03, 0xb3, 0xa3, 0x83, 0xe3, 0x8f, 0xe0, 0x7d, 0xab, 0xf2, 0x83, 0x6c, 0x88, 0xad,
	0x1f, 0x0d, 0x7a, 0xcf, 0x19, 0xf4, 0x9f, 0x1a, 0xac, 0xc0, 0xbd, 0x93, 0x25, 0x2d, 0x1a, 0x59,
	0x35, 0xf8, 0x06, 0x9c, 0xad, 0x2c, 0x69, 0x99, 0x6f, 0x78, 0xff, 0x85, 0xb0, 0x5b, 0x18, 0x6f,
	0xf0, 0x2d, 0xc0, 0xbe, 0x90, 0x0f, 0x54, 0x2d, 0xb5, 0x3a, 0x59, 0xb8, 0x86, 0x49, 0x15, 0x9d,
	0xc9, 0xcd, 0x51, 0x77, 0x47, 0xec, 0xe4, 0xec, 0xa8, 0xc7, 0x7f, 0xfa, 0xe0, 0xb4, 0x21, 0x91,
	0xda, 0x3c, 0x1f, 0x71, 0x05, 0xf6, 0x31, 0x57, 0x8a, 0xaa, 0x53, 0x77, 0x83, 0xf0, 0x15, 0x0c,
	0x0b, 0x5d, 0x53, 0xd5, 0xd9, 0x1a, 0x80, 0xef, 0xc0, 0xae, 0x48, 0xd6, 0x5a, 0x05, 0xd6, 0x75,
	0xef, 0xe6, 0xf2, 0xfd, 0xeb, 0x09, 0x5f, 0xf5, 0xa4, 0x8b, 0x99, 0x08, 0x16, 0x45, 0xb7, 0xe8,
	0xbc, 0xff, 0xf0, 0x69, 0xff, 0x7b, 0xb0, 0xcd, 0x5a, 0x04, 0xb0, 0x45, 0xb4, 0x88, 0xef, 0x12,
	0xff, 0x05, 0x5e, 0x02, 0xcc, 0xe2, 0x45, 0x98, 0x26, 0x49, 0x14, 0x66, 0x7e, 0x0f, 0x2f, 0xc0,
	0x0d, 0x3f, 0x47, 0xe1, 0xd7, 0xf9, 0x34, 0x8b, 0xfc, 0x3e, 0xbe, 0x04, 0x2f, 0x8b, 0xe7, 0xd1,
	0x6d, 0x2a, 0x6e, 0xa3, 0x38, 0xf3, 0x07, 0x38, 0x02, 0x6b, 0x26, 0xa6, 0x3f, 0x7c, 0x0b, 0x3d,
	0x70, 0xa6, 0xb3, 0x2f, 0xe9, 0x77, 0x91, 0xf8, 0x43, 0x74, 0x61, 0x38, 0xfd, 0x94, 0x8a, 0xcc,
	0xb7, 0xc7, 0x7f, 0xfb, 0x30, 0x6a, 0x0f, 0x37, 0xd7, 0x07, 0x42, 0x1f, 0x06, 0xf7, 0xa4, 0xba,
	0x37, 0x6a, 0x47, 0x44, 0xb0, 0x9a, 0xdf, 0x95, 0xea, 0xba, 0xf3, 0x7c, 0x7e, 0x55, 0x83, 0xff,
	0x5f, 0xe3, 0xb8, 0xcb, 0x1b, 0x5a, 0x2a, 0x59, 0x12, 0x5f, 0x80, 0x2b, 0x5c, 0x66, 0x12, 0x59,
	0xf2, 0x6b, 0xac, 0x0a, 0xb9, 0xfe, 0x65, 0x64, 0xd3, 0xd7, 0x65, 0x86, 0x65, 0x04, 0xab, 0xd2,
	0x05, 0x05, 0x36, 0x7b, 0xf2, 0xcc, 0xf1, 0x79, 0x49, 0x81, 0x63, 0xb8, 0x76, 0x6e, 0x0f, 0x99,
	0xab, 0x75, 0x30, 0x62, 0xaa, 0x1d, 0x1f, 0x73, 0x79, 0xad, 0xcb, 0x82, 0xc9, 0xcd, 0xf2, 0xf3,
	0x5c, 0x96, 0xc1, 0xc8, 0xcc, 0xb0, 0x8c, 0x60, 0x95, 0xfa, 0x40, 0x81, 0x67, 0x2a, 0xb6, 0xf3,
	0xca, 0xe6, 0x7f, 0xf2, 0xe1, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x61, 0x04, 0x45, 0xf3, 0x36,
	0x03, 0x00, 0x00,
}
